name: Playit RDP Tunnel

on:
  workflow_dispatch:

jobs:
  setup-rdp-tunnel:
    runs-on: ubuntu-latest  # لن نحتاج هذه السطر في حال كان هناك VPS خاص بك

    steps:
    - name: Check out the repository
      uses: actions/checkout@v2

    - name: Set up SSH access to VPS
      run: |
        mkdir -p ~/.ssh
        echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
        chmod 600 ~/.ssh/id_rsa
        ssh-keyscan -H ${{ secrets.VPS_HOST }} >> ~/.ssh/known_hosts

    - name: Install Dependencies on VPS
      run: |
        ssh -o StrictHostKeyChecking=no user@${{ secrets.VPS_HOST }} << 'EOF'
          sudo apt-get update
          sudo apt-get install -y curl ufw xrdp
        EOF

    - name: Download and Install Playit on VPS
      run: |
        ssh user@${{ secrets.VPS_HOST }} << 'EOF'
          curl -L "https://github.com/playit-cloud/playit-agent/releases/download/v0.15.26/playit-linux-x86_64-signed.tar.gz" -o playit.tar.gz
          tar -xvzf playit.tar.gz
          sudo mv playit /usr/local/bin/
          rm playit.tar.gz
        EOF

    - name: Enable RDP (Remote Desktop Protocol) and Configure xrdp
      run: |
        ssh user@${{ secrets.VPS_HOST }} << 'EOF'
          # Enable and start xrdp service
          sudo systemctl enable xrdp
          sudo systemctl start xrdp
          sudo ufw allow 3389  # Open RDP port
          sudo ufw reload
        EOF

    - name: Open Additional Port for Playit on VPS
      run: |
        ssh user@${{ secrets.VPS_HOST }} << 'EOF'
          # Open port 5000 for Playit
          sudo ufw allow 5000
          sudo ufw reload
        EOF

    - name: Start Playit and Set Up RDP Tunnel on VPS
      env:
        PLAYIT_AUTH_KEY: ${{ secrets.PL }} 
      run: |
        ssh user@${{ secrets.VPS_HOST }} << 'EOF'
          # Start Playit with the authentication key
          nohup playit --secret $PLAYIT_AUTH_KEY &  # Ensure Playit runs in the background
        EOF

    - name: Monitor Playit Process and Restart if Closed
      run: |
        ssh user@${{ secrets.VPS_HOST }} << 'EOF'
          while true; do
            if ! pgrep -x "playit" > /dev/null; then
              echo "Playit process not running. Restarting..."
              nohup playit --secret $PLAYIT_AUTH_KEY &
            fi
            sleep 10
          done
        EOF

    - name: Run Playit as a Service on VPS (Secure Method)
      run: |
        ssh user@${{ secrets.VPS_HOST }} << 'EOF'
          # Create a systemd service for Playit to ensure it restarts if it crashes
          echo "[Unit]
          Description=Playit Service
          After=network.target

          [Service]
          ExecStart=/usr/local/bin/playit --secret $PLAYIT_AUTH_KEY
          Restart=always

          [Install]
          WantedBy=multi-user.target" | sudo tee /etc/systemd/system/playit.service
          sudo systemctl daemon-reload
          sudo systemctl enable playit
          sudo systemctl start playit
        EOF

    - name: Block Unauthorized IPs for RDP and Playit on VPS
      run: |
        ssh user@${{ secrets.VPS_HOST }} << 'EOF'
          # Block unauthorized IPs using UFW
          sudo ufw deny from any to any port 3389
          sudo ufw deny from any to any port 5000
          sudo ufw reload
        EOF

    - name: Keep GitHub Action Runner Alive
      run: |
        # Run a no-op task to keep the runner alive
        while true; do
          echo "Keeping GitHub Actions runner alive..."
          sleep 300
        done

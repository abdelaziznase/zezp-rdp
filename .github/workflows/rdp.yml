name: Playit RDP Tunnel

on:
  workflow_dispatch:

jobs:
  setup-rdp-tunnel:
    runs-on: windows-latest

    steps:
    - name: Check out the repository
      uses: actions/checkout@v2

    - name: Download and Install Playit
      run: |
        Invoke-WebRequest -Uri "https://github.com/playit-cloud/playit-agent/releases/download/v0.15.26/playit-windows-x86_64-signed.exe" -OutFile "$env:USERPROFILE\playit.exe"
        Start-Sleep -Seconds 5  # Give some time for the download to complete

    # Enable RDP (Remote Desktop Protocol)
    - name: Enable TS
      run: Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server' -Name "fDenyTSConnections" -Value 0
    - run: Enable-NetFirewallRule -DisplayGroup "Remote Desktop"
    - run: Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server\WinStations\RDP-Tcp' -Name "UserAuthentication" -Value 1
    - run: Set-LocalUser -Name "runneradmin" -Password (ConvertTo-SecureString -AsPlainText "p@ssw0rd!" -Force)

    - name: Start Playit and Set Up RDP Tunnel
      env:
        PLAYIT_AUTH_KEY: ${{ secrets.PL }} 
      run: |
        # Start Playit with the authentication key
        Start-Process -FilePath "$env:USERPROFILE\playit.exe" -ArgumentList "--secret $env:PLAYIT_AUTH_KEY" -NoNewWindow -Wait
        # Ensure Playit runs continuously in the background
        Start-Process -FilePath "$env:USERPROFILE\playit.exe" -ArgumentList "--secret $env:PLAYIT_AUTH_KEY" -NoNewWindow

    - name: Monitor Playit and Reconnect Tunnel if Closed
      run: |
        # Monitor Playit process and restart if it's closed
        while ($true) {
            $playitProcess = Get-Process -Name "playit" -ErrorAction SilentlyContinue
            if ($null -eq $playitProcess) {
                Write-Host "Playit process is not running. Restarting..."
                Start-Process -FilePath "$env:USERPROFILE\playit.exe" -ArgumentList "--secret $env:PLAYIT_AUTH_KEY" -NoNewWindow
            }
            Start-Sleep -Seconds 30  # Check every 30 seconds

    - name: Keep GitHub Action Runner Alive
      run: |
        # Prevent GitHub Actions from stopping the runner
        while ($true) {
            Write-Host "Keeping GitHub Actions runner alive..."
            Start-Sleep -Seconds 3600  # Sleep for 1 hour
        }

    - name: Ensure Continuous Playit Operation
      run: |
        # Ensure Playit restarts immediately if it stops
        while ($true) {
            $playitProcess = Get-Process -Name "playit" -ErrorAction SilentlyContinue
            if ($null -eq $playitProcess) {
                Write-Host "Playit process has stopped unexpectedly, restarting it..."
                Start-Process -FilePath "$env:USERPROFILE\playit.exe" -ArgumentList "--secret $env:PLAYIT_AUTH_KEY" -NoNewWindow
            }
            Start-Sleep -Seconds 30  # Check every 30 seconds
        }
